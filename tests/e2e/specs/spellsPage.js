// Â© Copyright 2019 Bruno Giorello. Released under GNU AGPLv3, see 'LICENSE.md'.
// Cypress API reference: https://docs.cypress.io/api/introduction/api.html

describe('Spells page', () => {

  it('opens individual spells correctly', () => {
    cy.visit('/')
    cy.contains('Bless').click();
    cy.contains('30 feet');
    cy.contains('Up to 1 minute');
    cy.contains('Concentration');
    cy.contains('1 action');
    cy.contains('SRD 5.1');
    cy.contains('A sprinkling of holy water');
    cy.contains('You bless up to three creatures');
  });

  it('filters spells correctly', () => {
    // The only 1st-level cleric abjuration that contains "ar" should be "Sanctuary"
    cy.visit('/')
    cy.contains('Any class').click();
    cy.contains('cleric').click();
    cy.contains('Any level').click();
    cy.contains('1st level').click();
    cy.contains('Any school').click();
    cy.contains('abjuration').click();
    cy.get('.query').type('ar');
    cy.get('.spell:visible').should('have.length', 1).contains('Sanctuary');
  });

  it('favorites and unfavorites correctly', () => {
    cy.visit('/')
    // Favorite the spell 'Bless'
    cy.contains('Bless').click();
    cy.get('.spell-favorite').click();
    // Favorite the spell 'Bane'
    cy.contains('Bane').click();
    cy.get('.spell-favorite').click();
    // Go back to unfavorite 'Bless'
    cy.contains('Bless').click();
    cy.get('.spell-favorite').click();
    cy.get('.spell-close').click();
    // Check the favorites filter to ensure only Bane shows up
    cy.get('img[title="Toggle favorites filter"]').click()
    cy.get('.spell:visible').should('have.length', 1).contains('Bane');
  });

  it('creates, edits, saves and removes a spell correctly', () => {
    cy.visit('/');
    cy.get(':nth-child(4) > span > .details-icon').click(); // Toggle edition mode on
    cy.get(':nth-child(4) > :nth-child(1) > .details-icon').click(); // Create new spell

    const spell = {
      name: "Expelliarmus",
      school: "evocation",
      level: '1st level',
      range: '60 feet',
      duration: 'Instantaneous',
      casting: '1 action',
      material: 'Normal material component',
      description: "<p>Disarms the opponent</p>",
      atHigherLevel: "Gets stronger",
      materials: "A wand",
      aoeType: "sphere"
    };

    // Fill all the spell fields
    // The selectors below are autogenerated by Cypress. Might be worth considering adding DOM ids for the sake of less fragile tests.
    cy.get('.spell-editor > :nth-child(1) > :nth-child(1) > .form-control').type('{selectall}{backspace}' + spell.name);
    cy.get('.spell-editor > :nth-child(1) > :nth-child(2) > .cs').click().contains(spell.school).click();
    cy.get('.spell-editor > :nth-child(1) > :nth-child(3) > .cs').click().contains(spell.level).click();
    cy.get('.spell-editor > :nth-child(2) > :nth-child(1) > :nth-child(1) > .form-control').type(spell.range);
    cy.get(':nth-child(1) > :nth-child(2) > .form-control').type(spell.duration);
    cy.get('.mb-2 > .form-control').type(spell.casting);
    cy.get(':nth-child(2) > :nth-child(3) > .cs').click().contains(spell.material).click();
    cy.get(':nth-child(2) > :nth-child(3) > :nth-child(2)').click(); // Verbal
    cy.get('.spell-editor > :nth-child(2) > :nth-child(2) > :nth-child(3)').click(); // Scalable
    cy.get('.pl-4 > .row > :nth-child(8)').click(); // Wizard
    cy.get('[rows="4"]').type(spell.description);
    cy.get('[rows="2"]').type(spell.atHigherLevel);
    cy.get('[style=""] > .form-control').type(spell.materials);
    cy.get('.col-6 > .cs').click().contains(spell.aoeType).click();

    cy.get(':nth-child(4) > :nth-child(3) > .details-icon').click(); // Save
    cy.visit('/'); // Reload the page to test whether the save was successful
    cy.get('.query').type('expel');
    cy.get('.spell:visible').should('have.length', 1).contains('Expelliarmus').click();
    cy.get(':nth-child(4) > span > .details-icon').click(); // Toggle edition mode on

    // Validate all the spell fields
    cy.get('.spell-editor > :nth-child(1) > :nth-child(1) > .form-control').should('have.value', spell.name);
    cy.get('.spell-editor > :nth-child(1) > :nth-child(2) > .cs > .cs-field').should('contain', spell.school);
    cy.get('.spell-editor > :nth-child(1) > :nth-child(3) > .cs > .cs-field').should('contain', spell.level);
    cy.get('.spell-editor > :nth-child(2) > :nth-child(1) > :nth-child(1) > .form-control').should('have.value', spell.range);
    cy.get(':nth-child(1) > :nth-child(2) > .form-control').should('have.value', spell.duration);
    cy.get('.mb-2 > .form-control').should('have.value', spell.casting);
    cy.get(':nth-child(2) > :nth-child(3) > .cs > .cs-field').should('contain', spell.material);
    cy.get(':nth-child(2) > :nth-child(3) > :nth-child(2)').should('not.have.class', 'absent'); // Verbal
    cy.get('.spell-editor > :nth-child(2) > :nth-child(2) > :nth-child(3)').should('not.have.class', 'absent'); // Scalable
    cy.get('.pl-4 > .row > :nth-child(8)').should('not.have.class', 'disabled'); // Wizard
    cy.get('[rows="4"]').should('have.value', spell.description);
    cy.get('[rows="2"]').should('have.value', spell.atHigherLevel);
    cy.get(':nth-child(7) > .form-control').should('have.value', spell.materials);
    cy.get('.col-6 > .cs > .cs-field').should('contain', spell.aoeType);

    cy.get(':nth-child(4) > :nth-child(2) > .details-icon').click(); // Delete the spell
    cy.get('.spell:visible').should('have.length', 0);
  });
})
